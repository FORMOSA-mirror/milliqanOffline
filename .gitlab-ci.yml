
run tests:
    image: $CI_REGISTRY_IMAGE
    rules:
        - if: $CI_PIPELINE_SOURCE != "schedule"
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    script:
        - echo $Starting tests
        - which root

        - git submodule add ../MilliDAQ.git
        - cd MilliDAQ/
        - make clean && make shared
        - cd ../
        #- export MILLIDAQDIR=$PWD/MilliDAQ/
        #- export ROOT_INCLUDE_PATH=$MILLIDAQDIR/interface/
        #- export OFFLINESITE="GitLab"
        - cd Run3Detector
        #- export OFFLINEDIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
        - sed -i '/thisroot.sh/d' setup.sh
        - sed -i "s|/homes/milliqan/MilliDAQ|$PWD/../MilliDAQ|g" setup.sh
        - sed -i "s|UCSB|GitLab|g" setup.sh
        - sed -i 's/\.\.\///' setup.sh
        - . setup.sh
        - curl -o input.root https://cernbox.cern.ch/s/4b3s7iRaaP2cVnj/download
        - ./compile.sh test.exe
        - python3 scripts/runOfflineFactory.py --inputFile input.root --outputFile output.root --exe ./test.exe


build image:
    image: docker:stable
    tags:
        #- docker-privileged
    services:
        - name: docker:stable-dind
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
    variables:
        DOCKER_HOST: tcp://docker:2375/
        DOCKER_DRIVER: overlay2
        DOCKER_TLS_CERTDIR: ""
    script:
        - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
        - docker build -t $CI_REGISTRY_IMAGE .
        - docker push $CI_REGISTRY_IMAGE
        
